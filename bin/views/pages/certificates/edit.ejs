<h1>
    <a href="/secure/certificates/" class="btn btn-link"> <i class="fas fa-chevron-left"></i></a>
    Editando blog
</h1>

<div class="my-3 js-certificates-edit">
    <i class="fas fa-circle-notch fa-spin fa-3x"></i>
</div>

<script type="text/javascript">
    
    this.imageHasUploaded = false;
    this.imageUrl = '';
    
    document.addEventListener("DOMContentLoaded", function () {
        const _doc = $(document),
        _certificatesContainer = _doc.find('.js-certificates-edit'),
        _self = this;
        
        $.ajax({
            type: 'GET',
            headers: {
                'x-access-token': getCookie('x-access-token')
            },
            url: "/api/certificates/<%= id %>",
        })
        .done(function (data) {
            _certificatesContainer.html(bodyHtml(data));
            
            tinymce.init({
                selector: 'textarea',
                plugins: 'print preview searchreplace autolink autosave save directionality visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern noneditable help  charmap quickbars code',
                mobile: {
                    plugins: 'print preview searchreplace autolink autosave save directionality visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount textpattern noneditable help charmap quickbars'
                },
                menubar: 'file edit view insert format tools table tc help',
                toolbar: 'undo redo | bold italic underline strikethrough | fontselect fontsizeselect formatselect | alignleft aligncenter alignright alignjustify | outdent indent |  numlist bullist | forecolor backcolor casechange  removeformat | pagebreak | charmap | fullscreen  preview save print | insertfile image media template link anchor codesample | a11ycheck ltr rtl | code',
                image_advtab: true,
                content_css: '//www.tiny.cloud/css/codepen.min.css',
                template_cdate_format: '[Date Created (CDATE): %m/%d/%Y : %H:%M:%S]',
                template_mdate_format: '[Date Modified (MDATE): %m/%d/%Y : %H:%M:%S]',
                height: 300,
                image_caption: true,
                quickbars_selection_toolbar: 'bold italic | quicklink h2 h3 blockquote quickimage quicktable',
                toolbar_mode: 'sliding',
                contextmenu: "link image imagetools table",
                a11y_advanced_options: true,
            });
            
            _doc.on('click', '.js-blog-edit-save', e => save(e));
            loadOrder();
        })
        .fail(function (err) {
            if (err.status === 500 && err.responseJSON.auth === false) {
                window.location.href = '/secure/logout';
            }
        })
        .always(function () {
        });
        
    });
    
    function bodyHtml(handler) {
        const btns = `
        <div class="row">
            <div class="col">
                <a href="/secure/certificates/" class="btn btn-danger btn-block">
                    Cancelar
                </a>
            </div>
            <div class="col">
                <a href="#" class="btn btn-primary btn-block js-blog-edit-save">
                    Salvar alterações
                </a>
            </div>
        </div>
        `;
        
        const html = `
        <div class="card">
            <div class="card-header">
                ${btns}
            </div>
            <div class="card-body">
                <form>
                    <div class="form-group">
                        <label for="title">Nome</label>
                        <input type="text" class="form-control" id="name" name="name" value="${handler.name}">
                    </div>
                    <div class="form-group">
                        <label for="title">Url</label>
                        <input type="text" class="form-control" id="url" name="url" value="${handler.url}">
                    </div>
                    <div class="form-group">
                        <p><img src="${!handler.img ? "https://via.placeholder.com/300x300" : handler.img}"  width="300" /></p>
                        <p class="ml-2 pl-3">
                            <input class="form-check-input js-change-status-checkbox" type="checkbox" value="false" id="changeImg">
                            <label class="form-check-label" for="changeImg"
                                data-toggle="collapse" href="#changeImgCollapse" role="button" aria-expanded="false" aria-controls="changeImgCollapse"
                            >
                                Alterar imagem?
                            </label>
                        </p>
                        <div class="collapse" id="changeImgCollapse">
                            <label for="title">Imagem</label>
                            <input type="file" class="form-control-file" id="img" name="img">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="content">Descrição</label>
                        <textarea class="form-control" id="description" name="description">
                            ${handler.description}
                        </textarea>
                    </div>
                    <div class="form-group js-order">
                        <label for="content">Ordem</label>
                        <input type="hidden" class="js-order-selected" value="${handler.order}" />
                        <select class="form-control" id="order" name="order"></select>
                    </div>
                </form>
            </div>
            <div class="card-footer">
                ${btns}
            </div>
        </div>
        `;
        
        return html;
    }
    
    function save(evt) {
        evt.stopPropagation();
        evt.preventDefault();
        
        const _doc = $(document),
        _self = this,
        $form = _doc.find('form'),
        checkbox = $form.find('input[type=checkbox]').is(':checked');

        if(checkbox) {
            _self.uploadImage();
        } else {
            _self.imageHasUploaded = true;
            _self.imageUrl = '';
            _self.send();
        }
    }
    
    function uploadImage() {
        const self = this;
        let photo = document.getElementById("img").files[0];
        
        if(!!photo) {
            let formData = new FormData();
            formData.append("image", photo, photo.name);
            
            fetch('/api/upload/image', {method: "POST", body: formData})
            .then(res => res.json())
            .then(res => {
                self.imageHasUploaded = true;
                self.imageUrl = res.image_url;
                self.send();
            })
            .catch(err => imageHasUploaded = false);
        }
    }
    
    function send() {
        const _doc = $(document),
        _self = this,
        $form = _doc.find('form');
        
        let data = {};

        if(_self.imageUrl.length > 0) {
            data = {
                name: $form.find('input[name=name]').val().trim(),
                url: $form.find('input[name=url]').val().trim(),
                img: _self.imageUrl,
                description: tinymce.activeEditor.getContent(),
                order: parseInt($form.find('select[name="order"] option:selected').val().trim())
            };
        } else {
            data = {
                name: $form.find('input[name=name]').val().trim(),
                url: $form.find('input[name=url]').val().trim(),
                description: tinymce.activeEditor.getContent(),
                order: parseInt($form.find('select[name="order"] option:selected').val().trim())
            };
        }
        
        if(_self.imageHasUploaded) {
            $.ajax({
                type: 'PUT',
                headers: {
                    'x-access-token': getCookie('x-access-token')
                },
                data: data,
                url: "/api/certificates/<%= id %>/save",
            })
            .done(function (data) {
                toast({ data: data, type: 'success' });
                
                window.onbeforeunload = false;
                
                setTimeout(() => {
                    window.location.href = '/secure/certificates';
                }, 2000);
            })
            .fail(function (err) {
                toast({ data: err, type: 'error' });
            })
            .always(function () {
            });
        }
    }
    
    function loadOrder(){
        const _doc = $(document),
        _orderContainer = _doc.find('.js-order'),
        _self = this;
        
        fetch('/api/certificates', {method: "GET"})
        .then(res => res.json())
        .then(res => {
            let qty = res.length;
            let selected = parseInt(_doc.find('.js-order-selected').val());

            res.forEach((element, i) => {
                let select = _orderContainer.find('select');
                select.append(`<option ${i === selected ? 'selected': ''}  value="${i}">${i}</option>`)
            });
        })
        .catch(err => console.error(err));
    }
    
</script>